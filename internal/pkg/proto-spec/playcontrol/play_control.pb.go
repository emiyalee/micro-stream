// Code generated by protoc-gen-go. DO NOT EDIT.
// source: play_control.proto

package playcontrol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplyPlayRequest struct {
	MediaResourceID      string   `protobuf:"bytes,1,opt,name=mediaResourceID" json:"mediaResourceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyPlayRequest) Reset()         { *m = ApplyPlayRequest{} }
func (m *ApplyPlayRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyPlayRequest) ProtoMessage()    {}
func (*ApplyPlayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_play_control_d2b6de3cfa5ecd89, []int{0}
}
func (m *ApplyPlayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyPlayRequest.Unmarshal(m, b)
}
func (m *ApplyPlayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyPlayRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyPlayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyPlayRequest.Merge(dst, src)
}
func (m *ApplyPlayRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyPlayRequest.Size(m)
}
func (m *ApplyPlayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyPlayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyPlayRequest proto.InternalMessageInfo

func (m *ApplyPlayRequest) GetMediaResourceID() string {
	if m != nil {
		return m.MediaResourceID
	}
	return ""
}

type ApplyPlayResponse struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
	PlayURL              string   `protobuf:"bytes,3,opt,name=playURL" json:"playURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyPlayResponse) Reset()         { *m = ApplyPlayResponse{} }
func (m *ApplyPlayResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyPlayResponse) ProtoMessage()    {}
func (*ApplyPlayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_play_control_d2b6de3cfa5ecd89, []int{1}
}
func (m *ApplyPlayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyPlayResponse.Unmarshal(m, b)
}
func (m *ApplyPlayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyPlayResponse.Marshal(b, m, deterministic)
}
func (dst *ApplyPlayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyPlayResponse.Merge(dst, src)
}
func (m *ApplyPlayResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyPlayResponse.Size(m)
}
func (m *ApplyPlayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyPlayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyPlayResponse proto.InternalMessageInfo

func (m *ApplyPlayResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *ApplyPlayResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ApplyPlayResponse) GetPlayURL() string {
	if m != nil {
		return m.PlayURL
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplyPlayRequest)(nil), "playcontrol.ApplyPlayRequest")
	proto.RegisterType((*ApplyPlayResponse)(nil), "playcontrol.ApplyPlayResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayServiceClient is the client API for PlayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayServiceClient interface {
	ApplyPlay(ctx context.Context, in *ApplyPlayRequest, opts ...grpc.CallOption) (*ApplyPlayResponse, error)
}

type playServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlayServiceClient(cc *grpc.ClientConn) PlayServiceClient {
	return &playServiceClient{cc}
}

func (c *playServiceClient) ApplyPlay(ctx context.Context, in *ApplyPlayRequest, opts ...grpc.CallOption) (*ApplyPlayResponse, error) {
	out := new(ApplyPlayResponse)
	err := c.cc.Invoke(ctx, "/playcontrol.PlayService/ApplyPlay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayServiceServer is the server API for PlayService service.
type PlayServiceServer interface {
	ApplyPlay(context.Context, *ApplyPlayRequest) (*ApplyPlayResponse, error)
}

func RegisterPlayServiceServer(s *grpc.Server, srv PlayServiceServer) {
	s.RegisterService(&_PlayService_serviceDesc, srv)
}

func _PlayService_ApplyPlay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyPlayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayServiceServer).ApplyPlay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/playcontrol.PlayService/ApplyPlay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayServiceServer).ApplyPlay(ctx, req.(*ApplyPlayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "playcontrol.PlayService",
	HandlerType: (*PlayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApplyPlay",
			Handler:    _PlayService_ApplyPlay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "play_control.proto",
}

func init() { proto.RegisterFile("play_control.proto", fileDescriptor_play_control_d2b6de3cfa5ecd89) }

var fileDescriptor_play_control_d2b6de3cfa5ecd89 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xc8, 0x49, 0xac,
	0x8c, 0x4f, 0xce, 0xcf, 0x2b, 0x29, 0xca, 0xcf, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x06, 0x89, 0x41, 0x85, 0x94, 0x6c, 0xb8, 0x04, 0x1c, 0x0b, 0x0a, 0x72, 0x2a, 0x03, 0x72, 0x12,
	0x2b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x34, 0xb8, 0xf8, 0x73, 0x53, 0x53, 0x32,
	0x13, 0x83, 0x52, 0x8b, 0xf3, 0x4b, 0x8b, 0x92, 0x53, 0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0xd0, 0x85, 0x95, 0xf2, 0xb9, 0x04, 0x91, 0x74, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7,
	0x0a, 0xc9, 0x70, 0x71, 0xa6, 0x16, 0x15, 0xe5, 0x17, 0x39, 0xe7, 0xa7, 0xa4, 0x82, 0x35, 0xb2,
	0x06, 0x21, 0x04, 0x84, 0x94, 0xb8, 0x78, 0xc0, 0x1c, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54,
	0x09, 0x26, 0xb0, 0xc9, 0x28, 0x62, 0x42, 0x12, 0x5c, 0xec, 0x20, 0x37, 0x86, 0x06, 0xf9, 0x48,
	0x30, 0x83, 0xa5, 0x61, 0x5c, 0xa3, 0x48, 0x2e, 0x6e, 0x90, 0x5d, 0xc1, 0xa9, 0x45, 0x65, 0x99,
	0xc9, 0xa9, 0x42, 0x5e, 0x5c, 0x9c, 0x70, 0xfb, 0x85, 0x64, 0xf5, 0x90, 0x3c, 0xa6, 0x87, 0xee,
	0x2b, 0x29, 0x39, 0x5c, 0xd2, 0x10, 0x67, 0x27, 0xb1, 0x81, 0x43, 0xc7, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x91, 0x1d, 0x2d, 0xcf, 0x33, 0x01, 0x00, 0x00,
}
