// Code generated by protoc-gen-go. DO NOT EDIT.
// source: segment.proto

package segment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MediaSegmentRequest struct {
	SrcMediaURL          string   `protobuf:"bytes,1,opt,name=srcMediaURL" json:"srcMediaURL,omitempty"`
	DstMediaURL          string   `protobuf:"bytes,2,opt,name=dstMediaURL" json:"dstMediaURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaSegmentRequest) Reset()         { *m = MediaSegmentRequest{} }
func (m *MediaSegmentRequest) String() string { return proto.CompactTextString(m) }
func (*MediaSegmentRequest) ProtoMessage()    {}
func (*MediaSegmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_segment_9d9b54ba71487cbb, []int{0}
}
func (m *MediaSegmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaSegmentRequest.Unmarshal(m, b)
}
func (m *MediaSegmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaSegmentRequest.Marshal(b, m, deterministic)
}
func (dst *MediaSegmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaSegmentRequest.Merge(dst, src)
}
func (m *MediaSegmentRequest) XXX_Size() int {
	return xxx_messageInfo_MediaSegmentRequest.Size(m)
}
func (m *MediaSegmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaSegmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MediaSegmentRequest proto.InternalMessageInfo

func (m *MediaSegmentRequest) GetSrcMediaURL() string {
	if m != nil {
		return m.SrcMediaURL
	}
	return ""
}

func (m *MediaSegmentRequest) GetDstMediaURL() string {
	if m != nil {
		return m.DstMediaURL
	}
	return ""
}

type MediaSegmentResponse struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediaSegmentResponse) Reset()         { *m = MediaSegmentResponse{} }
func (m *MediaSegmentResponse) String() string { return proto.CompactTextString(m) }
func (*MediaSegmentResponse) ProtoMessage()    {}
func (*MediaSegmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_segment_9d9b54ba71487cbb, []int{1}
}
func (m *MediaSegmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaSegmentResponse.Unmarshal(m, b)
}
func (m *MediaSegmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaSegmentResponse.Marshal(b, m, deterministic)
}
func (dst *MediaSegmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaSegmentResponse.Merge(dst, src)
}
func (m *MediaSegmentResponse) XXX_Size() int {
	return xxx_messageInfo_MediaSegmentResponse.Size(m)
}
func (m *MediaSegmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaSegmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MediaSegmentResponse proto.InternalMessageInfo

func (m *MediaSegmentResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *MediaSegmentResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*MediaSegmentRequest)(nil), "segment.MediaSegmentRequest")
	proto.RegisterType((*MediaSegmentResponse)(nil), "segment.MediaSegmentResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SegmentServiceClient is the client API for SegmentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SegmentServiceClient interface {
	MediaSegment(ctx context.Context, in *MediaSegmentRequest, opts ...grpc.CallOption) (*MediaSegmentResponse, error)
}

type segmentServiceClient struct {
	cc *grpc.ClientConn
}

func NewSegmentServiceClient(cc *grpc.ClientConn) SegmentServiceClient {
	return &segmentServiceClient{cc}
}

func (c *segmentServiceClient) MediaSegment(ctx context.Context, in *MediaSegmentRequest, opts ...grpc.CallOption) (*MediaSegmentResponse, error) {
	out := new(MediaSegmentResponse)
	err := c.cc.Invoke(ctx, "/segment.SegmentService/MediaSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SegmentServiceServer is the server API for SegmentService service.
type SegmentServiceServer interface {
	MediaSegment(context.Context, *MediaSegmentRequest) (*MediaSegmentResponse, error)
}

func RegisterSegmentServiceServer(s *grpc.Server, srv SegmentServiceServer) {
	s.RegisterService(&_SegmentService_serviceDesc, srv)
}

func _SegmentService_MediaSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MediaSegmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SegmentServiceServer).MediaSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/segment.SegmentService/MediaSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SegmentServiceServer).MediaSegment(ctx, req.(*MediaSegmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SegmentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "segment.SegmentService",
	HandlerType: (*SegmentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MediaSegment",
			Handler:    _SegmentService_MediaSegment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "segment.proto",
}

func init() { proto.RegisterFile("segment.proto", fileDescriptor_segment_9d9b54ba71487cbb) }

var fileDescriptor_segment_9d9b54ba71487cbb = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x4d, 0xcf,
	0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x22, 0xb9,
	0x84, 0x7d, 0x53, 0x53, 0x32, 0x13, 0x83, 0x21, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x05, 0x2e, 0xee, 0xe2, 0xa2, 0x64, 0xb0, 0x4c, 0x68, 0x90, 0x8f, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x67, 0x10, 0xb2, 0x10, 0x48, 0x45, 0x4a, 0x71, 0x09, 0x5c, 0x05, 0x13, 0x44, 0x05, 0x92,
	0x90, 0x52, 0x04, 0x97, 0x08, 0xaa, 0xd1, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x32, 0x5c,
	0x9c, 0xa9, 0x45, 0x45, 0xf9, 0x45, 0xce, 0xf9, 0x29, 0xa9, 0x60, 0x93, 0x59, 0x83, 0x10, 0x02,
	0x42, 0x4a, 0x5c, 0x3c, 0x60, 0x8e, 0x6f, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0x2a, 0xd4, 0x60, 0x14,
	0x31, 0xa3, 0x58, 0x2e, 0x3e, 0xa8, 0xa1, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0xde,
	0x5c, 0x3c, 0xc8, 0x76, 0x09, 0xc9, 0xe8, 0xc1, 0xfc, 0x8b, 0xc5, 0x77, 0x52, 0xb2, 0x38, 0x64,
	0x21, 0x0e, 0x4c, 0x62, 0x03, 0x87, 0x91, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xad, 0x5e, 0x7d,
	0xf0, 0x34, 0x01, 0x00, 0x00,
}
